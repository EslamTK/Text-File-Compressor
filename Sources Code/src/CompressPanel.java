

import java.io.*;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class CompressPanel extends javax.swing.JPanel {

    JFileChooser fileChooser,fileSaver;
    public CompressPanel() {
        initComponents();
        fileChooser = new JFileChooser();
	fileChooser.setFileFilter(new TxtFileFilter());
	fileChooser.setAcceptAllFileFilterUsed(false);
        fileSaver = new JFileChooser();
        fileSaver.setAcceptAllFileFilterUsed(false);
        fileSaver.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PasswordCheckBox = new javax.swing.JCheckBox();
        PasswordTextBox = new javax.swing.JPasswordField();
        ConfirmPassLabel = new javax.swing.JLabel();
        ConfirmPassTextBox = new javax.swing.JPasswordField();
        CompressBtn = new javax.swing.JButton();
        FilesLabel = new javax.swing.JLabel();
        FilesTextBox = new javax.swing.JTextField();
        FilesSelectBtn = new javax.swing.JButton();
        SaveLabel = new javax.swing.JLabel();
        SaveChangeBtn = new javax.swing.JButton();
        SaveTextBox = new javax.swing.JTextField();

        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {50, 250, 50};
        layout.rowHeights = new int[] {30};
        setLayout(layout);

        PasswordCheckBox.setText("  Set Password : ");
        PasswordCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PasswordCheckBoxStateChanged(evt);
            }
        });
        PasswordCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordCheckBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        add(PasswordCheckBox, gridBagConstraints);

        PasswordTextBox.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 125;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 125);
        add(PasswordTextBox, gridBagConstraints);

        ConfirmPassLabel.setText("  Confirm Password : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(ConfirmPassLabel, gridBagConstraints);

        ConfirmPassTextBox.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 125;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 125);
        add(ConfirmPassTextBox, gridBagConstraints);

        CompressBtn.setText("Compress");
        CompressBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompressBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        add(CompressBtn, gridBagConstraints);

        FilesLabel.setText("File :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(FilesLabel, gridBagConstraints);

        FilesTextBox.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(FilesTextBox, gridBagConstraints);

        FilesSelectBtn.setText("Select");
        FilesSelectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilesSelectBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(FilesSelectBtn, gridBagConstraints);

        SaveLabel.setText("Save To :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(SaveLabel, gridBagConstraints);

        SaveChangeBtn.setText("Change");
        SaveChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveChangeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        add(SaveChangeBtn, gridBagConstraints);

        SaveTextBox.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(SaveTextBox, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void PasswordCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PasswordCheckBoxStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordCheckBoxStateChanged

    private void PasswordCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordCheckBoxActionPerformed
        if(PasswordCheckBox.isSelected())
        {
            PasswordTextBox.setEnabled(true);
            ConfirmPassTextBox.setEnabled(true);
        }
        else
        {
            PasswordTextBox.setEnabled(false);
            ConfirmPassTextBox.setEnabled(false);
        }
    }//GEN-LAST:event_PasswordCheckBoxActionPerformed

    private void FilesSelectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilesSelectBtnActionPerformed
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            File file = fileChooser.getSelectedFile();
            FilesTextBox.setText(file.getAbsolutePath());
            SaveTextBox.setText(file.getParent());
            fileSaver.setSelectedFile(new File(file.getParent()));
        }
    }//GEN-LAST:event_FilesSelectBtnActionPerformed

    private void SaveChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveChangeBtnActionPerformed
        if (fileSaver.showSaveDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            SaveTextBox.setText(fileSaver.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_SaveChangeBtnActionPerformed

    private void CompressBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompressBtnActionPerformed
        if(fileChooser.getSelectedFile()!=null)
        {
            LoadingDialog loadingDialog = new LoadingDialog((JFrame)this.getParent().getParent().getParent().getParent().getParent(), true);
            if(PasswordCheckBox.isSelected())
            {
                if (String.valueOf(PasswordTextBox.getPassword()).equals(String.valueOf(ConfirmPassTextBox.getPassword()))
                        && !String.valueOf(PasswordTextBox.getPassword()).isEmpty()) {
                    loadingDialog.compressFile(fileChooser.getSelectedFile(), fileSaver.getSelectedFile().getAbsolutePath()+"\\"+
                              getFileName(fileChooser.getSelectedFile().getName()),String.valueOf(PasswordTextBox.getPassword()));
                } else {
                    JOptionPane.showMessageDialog(this, "Please Rewrite Your Password", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            else
            {
                loadingDialog.compressFile(fileChooser.getSelectedFile(), fileSaver.getSelectedFile().getAbsolutePath()+"\\"+
                                           getFileName(fileChooser.getSelectedFile().getName()));
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please Choose A File To Compress!","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CompressBtnActionPerformed
    private String getFileName(String name)
    {
            return name.substring(0,name.lastIndexOf('.'));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CompressBtn;
    private javax.swing.JLabel ConfirmPassLabel;
    private javax.swing.JPasswordField ConfirmPassTextBox;
    private javax.swing.JLabel FilesLabel;
    private javax.swing.JButton FilesSelectBtn;
    private javax.swing.JTextField FilesTextBox;
    private javax.swing.JCheckBox PasswordCheckBox;
    private javax.swing.JPasswordField PasswordTextBox;
    private javax.swing.JButton SaveChangeBtn;
    private javax.swing.JLabel SaveLabel;
    private javax.swing.JTextField SaveTextBox;
    // End of variables declaration//GEN-END:variables
}
